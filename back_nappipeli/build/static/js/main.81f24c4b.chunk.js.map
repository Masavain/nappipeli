{"version":3,"sources":["reducers/counterReducer.js","reducers/notificationReducer.js","services/winners.js","reducers/winnersReducer.js","components/Notification.js","services/counter.js","App.js","store.js","index.js"],"names":["counterReducer","state","arguments","length","undefined","count","winCategory","action","type","Object","objectSpread","data","deleteMessage","_ref3","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","wrap","_context3","prev","next","stop","this","_x3","apply","notificationReducer","pressed","message","visible","notif","services_winners","getAll","axios","get","then","response","create","_ref","_callee","newObject","_context","post","sent","abrupt","_x","winnersReducer","toggle","winners","console","log","Notification","handleSubmit","event","winnerObject","preventDefault","name","target","value","date","Date","winnerService","_this","props","_this2","notification","react_default","createElement","style","border","padding","borderWidth","onSubmit","onClick","React","Component","connect","counter","baseUrl","getCounter","update","_ref2","_callee2","_context2","put","_x2","App","componentWillMount","initCounter","initNotification","initiateWinners","buttonPress","counterObject","increment","id","counterService","changeWinCategory","press","notifyWin","concat","toggleLeaderboard","components_Notification","map","w","hideMessage","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.81f24c4b.chunk.js","sourcesContent":["// winCategory \n// 100: small price\n// 200: medium price\n/// 500: big price\n\nconst counterReducer = (state={count: 0, winCategory: 100}, action) => {\n  if (action.type === 'INCREMENT') {\n    return {...state, count: state.count+10}\n  }\n  if (action.type === 'CHANGE_WIN'){\n    return {...state, winCategory: action.data }\n  }\n  if (action.type === 'INIT') {\n    return state\n  }\n  return state\n}\n\nexport const increment = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'INCREMENT'\n    })\n  }\n}\n\nexport const changeWinCategory = (data) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'CHANGE_WIN',\n      data\n    })\n  }\n}\n\n\n\nexport const initCounter = () => {\n    return{\n      type: 'INIT',\n    }\n}\n\n\nexport default counterReducer","const notificationReducer = (state = { pressed: false, message: '', visible: false }, action) => {\n  switch (action.type) {\n    case 'PRESSED':\n      return { ...state, pressed: true }\n    case 'INIT_WIN':\n      return state\n    case 'NEW_NOTIF':\n      return { ...state, message: action.notif, visible: true }\n    case 'DELETE_MESSAGE':\n      return { ...state, message: '', visible: state.visible }\n    case 'HIDE_VISIBLE':\n      return { ...state, message: state.message, visible: false }\n    default:\n      return state\n  }\n\n}\n\nexport const press = () => {\n  return {\n    type: 'PRESSED'\n  }\n}\n\nexport const notifyWin = (notif) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'NEW_NOTIF',\n      notif\n    })\n  }\n}\n\nexport const hideMessage = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'HIDE_VISIBLE',\n    })\n  }\n}\nexport const deleteMessage = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'DELETE_MESSAGE',\n    })\n  }\n}\n\nexport const initNotification = () => {\n  return {\n    type: 'INIT_WIN'\n  }\n}\n\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/winners'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n}\nexport default { getAll, create }","import winnerService from './../services/winners'\n\nconst winnersReducer = (state = {toggle: false, winners: []}, action) => {\n    console.log('ACTION: ', action)\n    switch (action.type) {\n    case 'INIT_WINNERS':\n      return { ...state, winners: action.winners }\n    case 'TOGGLE':\n      return { ...state, toggle: action.toggle }\n    default:\n      return state\n    }\n  }\n  \n  export const toggle = (toggle) => {\n    return{\n      type: 'TOGGLE',\n      toggle\n    }\n  }\n\n  export const initiateWinners = (toggle) => {\n    return async (dispatch) => {\n      const winners = await winnerService.getAll()\n      dispatch({\n        type: 'INIT_WINNERS',\n        winners\n      })\n    }\n  }\n  \n  \n  \n  export default winnersReducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteMessage, hideMessage } from './../reducers/notificationReducer'\nimport winnerService from './../services/winners'\n\n\nclass Notification extends React.Component {\n    handleSubmit = async (event) => {\n        event.preventDefault()\n        const winnerObject = {\n            name: event.target.name.value,\n            date: new Date(),\n          }\n        winnerService.create(winnerObject)\n        this.props.deleteMessage()\n    }\n\n\n    render() {\n        if (this.props.notification.message === '') {\n            return null\n        }\n        const style = {\n            border: 'solid',\n            padding: 10,\n            borderWidth: 1\n        }\n        return (\n            <div style={style}>\n                {this.props.notification.message}\n                <form onSubmit={this.handleSubmit}>\n                    <div><input type=\"text\" name=\"name\" /></div>\n                    <button>input name</button>\n                </form>\n                <button onClick={() => this.props.deleteMessage()}>X</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        counter: state.counter,\n        notification: state.notification,\n        winners: state.winners\n    }\n}\n\nexport default connect(\n    mapStateToProps, { deleteMessage }\n)(Notification)\n","import axios from 'axios'\nconst baseUrl = '/api/counters/5c5aafed153cf16a0d76c6fc'\n\n// const getAll = () => {\n//     const request = axios.get(baseUrl)\n//     return request.then(response => response.data)\n// }\n\nconst getCounter = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\nconst update = async (newObject) => {\n    const response = await axios.put(baseUrl, newObject)\n    return response.data\n  }\nconst create = async (newObject) => {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n}\nexport default { getCounter, create, update }","import React from 'react';\nimport { connect } from 'react-redux'\nimport { initCounter, increment, changeWinCategory } from './reducers/counterReducer'\nimport { notifyWin, initNotification, press, deleteMessage, hideMessage } from './reducers/notificationReducer'\nimport { initiateWinners, toggle} from './reducers/winnersReducer'\nimport Notification from './components/Notification'\nimport counterService from './services/counter'\n\n\nimport './App.css';\n\nclass App extends React.Component {\n  componentWillMount = async () => {\n    this.props.initCounter()\n    this.props.initNotification()\n    this.props.initiateWinners()\n  }\n  \n  render() {\n    const buttonPress = async () => {\n      await this.props.increment()\n      console.log(this.props.counter.count)\n      const counterObject = {\n        id:'5c5aafed153cf16a0d76c6fc',\n        state: this.props.counter.count\n      }\n      await counterService.update(counterObject)\n      if ((this.props.counter.count % 100 !== 0) && this.props.notification.pressed) {\n        await this.props.changeWinCategory(100)\n      }\n      if ((this.props.counter.count % 200 === 0) && this.props.notification.pressed) {\n        await this.props.changeWinCategory(200)\n      }\n      if ((this.props.counter.count % 500 === 0) && this.props.notification.pressed) {\n        await this.props.changeWinCategory(500)\n      }\n\n      if (!this.props.notification.pressed) this.props.press()\n\n      if ((this.props.counter.count % this.props.counter.winCategory) === 0 && this.props.notification.pressed) {\n        this.props.notifyWin(`You WIN ${this.props.counter.winCategory}`)\n      }\n    }\n    const toggleLeaderboard = async () => {\n      this.props.toggle(!this.props.winners.toggle)\n    }\n\n    return (\n      <div>\n        <button\n          onClick={() => buttonPress()}>nappu\n        </button>\n        <div>{100 - (this.props.counter.count % 100)}</div>\n        <Notification/>\n\n        <button onClick={() => toggleLeaderboard()}>Leaderboard</button>\n\n        <div> {this.props.winners.toggle ?\n        <ul>\n          {this.props.winners.winners.map(w => w.name)}\n        </ul>\n      : <div></div>} </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n    notification: state.notification,\n    winners: state.winners\n  }\n}\n\nexport default connect(\n  mapStateToProps, { initiateWinners, toggle, notifyWin, initCounter, changeWinCategory, initNotification, increment, press, deleteMessage, hideMessage }\n)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport counterReducer from './reducers/counterReducer'\nimport winnersReducer from './reducers/winnersReducer'\n\nconst reducer = combineReducers({\n    counter: counterReducer,\n    notification: notificationReducer,\n    winners: winnersReducer\n  })\n\nconst store = createStore(reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))\n"],"sourceRoot":""}