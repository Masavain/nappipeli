{"version":3,"sources":["reducers/counterReducer.js","reducers/notificationReducer.js","services/winners.js","reducers/winnersReducer.js","components/Notification.js","services/counter.js","App.js","store.js","index.js"],"names":["counterReducer","state","arguments","length","undefined","count","winCategory","action","type","Object","objectSpread","data","deleteMessage","_ref3","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","wrap","_context3","prev","next","stop","this","_x3","apply","notificationReducer","pressed","message","visible","notif","services_winners","getAll","axios","get","then","response","create","_ref","_callee","newObject","_context","post","sent","abrupt","_x","initiateWinners","toggle","winners","sliced","winnerService","reverse","slice","winnersReducer","console","log","Notification","handleSubmit","event","winnerObject","preventDefault","name","target","value","date","Date","_this","props","_this2","notification","react_default","createElement","Alert","style","position","border","margin","padding","borderWidth","left","width","class","onSubmit","Button","onClick","React","Component","connect","counter","baseUrl","getCounter","update","_ref2","_callee2","_context2","put","_x2","prizes","100","200","500","App","componentWillMount","initCounter","initNotification","buttonPress","counterObject","increment","id","counterService","changeWinCategory","press","notifyWin","concat","toggleLeaderboard","bsSize","bsStyle","components_Notification","map","w","hideMessage","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.93a49118.chunk.js","sourcesContent":["// winCategory \n// 100: small price\n// 200: medium price\n/// 500: big price\n\nconst counterReducer = (state={count: 0, winCategory: 100}, action) => {\n  if (action.type === 'INCREMENT') {\n    return {...state, count: state.count+10}\n  }\n  if (action.type === 'CHANGE_WIN'){\n    return {...state, winCategory: action.data }\n  }\n  if (action.type === 'INIT') {\n    return state\n  }\n  return state\n}\n\nexport const increment = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'INCREMENT'\n    })\n  }\n}\n\nexport const changeWinCategory = (data) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'CHANGE_WIN',\n      data\n    })\n  }\n}\n\n\n\nexport const initCounter = () => {\n    return{\n      type: 'INIT',\n    }\n}\n\n\nexport default counterReducer","const notificationReducer = (state = { pressed: false, message: '', visible: false }, action) => {\n  switch (action.type) {\n    case 'PRESSED':\n      return { ...state, pressed: true }\n    case 'INIT_WIN':\n      return state\n    case 'NEW_NOTIF':\n      return { ...state, message: action.notif, visible: true }\n    case 'DELETE_MESSAGE':\n      return { ...state, message: '', visible: state.visible }\n    case 'HIDE_VISIBLE':\n      return { ...state, message: state.message, visible: false }\n    default:\n      return state\n  }\n\n}\n\nexport const press = () => {\n  return {\n    type: 'PRESSED'\n  }\n}\n\nexport const notifyWin = (notif) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'NEW_NOTIF',\n      notif\n    })\n  }\n}\n\nexport const hideMessage = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'HIDE_VISIBLE',\n    })\n  }\n}\nexport const deleteMessage = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'DELETE_MESSAGE',\n    })\n  }\n}\n\nexport const initNotification = () => {\n  return {\n    type: 'INIT_WIN'\n  }\n}\n\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/winners'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n}\nexport default { getAll, create }","import winnerService from './../services/winners'\n\nconst winnersReducer = (state = {toggle: false, winners: []}, action) => {\n    console.log('ACTION: ', action)\n    switch (action.type) {\n    case 'INIT_WINNERS':\n      return { ...state, winners: action.winners }\n    case 'TOGGLE':\n      return { ...state, toggle: action.toggle }\n    default:\n      return state\n    }\n  }\n  \n  export const toggle = (toggle) => {\n    return{\n      type: 'TOGGLE',\n      toggle\n    }\n  }\n\n  export const initiateWinners = (toggle) => {\n    return async (dispatch) => {\n      const winners = await winnerService.getAll()\n      winners.reverse()\n      const sliced = winners.slice(0,11)\n      dispatch({\n        type: 'INIT_WINNERS',\n        winners: sliced\n      })\n    }\n  }\n  \n  \n  \n  export default winnersReducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteMessage, hideMessage } from './../reducers/notificationReducer'\nimport { initiateWinners} from './../reducers/winnersReducer'\nimport winnerService from './../services/winners'\nimport { Alert, Button } from 'react-bootstrap'\n\n\nclass Notification extends React.Component {\n    handleSubmit = async (event) => {\n        event.preventDefault()\n        const winnerObject = {\n            name: event.target.name.value,\n            date: new Date(),\n          }\n        winnerService.create(winnerObject)\n        this.props.initiateWinners()\n        this.props.deleteMessage()\n    }\n\n\n    render() {\n        if (this.props.notification.message === '') {\n            return null\n        }\n        const style = {\n            position: 'relative',\n            border: 'solid',\n            margin: 10,\n            padding: 10,\n            borderWidth: 1,\n            left:10,\n            width: '300px'\n        }\n        return (\n            <Alert style={style}>\n                <h3>{this.props.notification.message}</h3>\n                <form class=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div class=\"row\"><input type=\"text\" name=\"name\" /></div>\n                    <Button style={{ position: 'relative'}}>input name</Button>\n                </form>\n                <Button style={{margin: 5, position: 'relative'}} onClick={() => this.props.deleteMessage()}>X</Button>\n            </Alert>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        counter: state.counter,\n        notification: state.notification,\n        winners: state.winners\n    }\n}\n\nexport default connect(\n    mapStateToProps, { deleteMessage, initiateWinners }\n)(Notification)\n","import axios from 'axios'\nconst baseUrl = '/api/counters/5c5aafed153cf16a0d76c6fc'\n\n// const getAll = () => {\n//     const request = axios.get(baseUrl)\n//     return request.then(response => response.data)\n// }\n\nconst getCounter = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\nconst update = async (newObject) => {\n    const response = await axios.put(baseUrl, newObject)\n    return response.data\n  }\nconst create = async (newObject) => {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n}\nexport default { getCounter, create, update }","import React from 'react';\nimport { connect } from 'react-redux'\nimport { initCounter, increment, changeWinCategory } from './reducers/counterReducer'\nimport { notifyWin, initNotification, press, deleteMessage, hideMessage } from './reducers/notificationReducer'\nimport { initiateWinners, toggle } from './reducers/winnersReducer'\nimport Notification from './components/Notification'\nimport counterService from './services/counter'\nimport { Button } from 'react-bootstrap'\nimport './App.css'\n\nconst prizes = {\n  '100':'small',\n  '200':'medium',\n  '500':'BIG'\n}\n\nclass App extends React.Component {\n  componentWillMount = async () => {\n    this.props.initCounter()\n    this.props.initNotification()\n    this.props.initiateWinners()\n  }\n\n\n\n  render() {\n    \n    const buttonPress = async () => {\n      await this.props.increment()\n      console.log(this.props.counter.count)\n      const counterObject = {\n        id: '5c5aafed153cf16a0d76c6fc',\n        state: this.props.counter.count\n      }\n      await counterService.update(counterObject)\n      if ((this.props.counter.count % 100 !== 0) && this.props.notification.pressed) {\n        await this.props.changeWinCategory(100)\n      }\n      if ((this.props.counter.count % 200 === 0) && this.props.notification.pressed) {\n        await this.props.changeWinCategory(200)\n      }\n      if ((this.props.counter.count % 500 === 0) && this.props.notification.pressed) {\n        await this.props.changeWinCategory(500)\n      }\n\n      if (!this.props.notification.pressed) this.props.press()\n\n      if ((this.props.counter.count % this.props.counter.winCategory) === 0 && this.props.notification.pressed) {\n        this.props.notifyWin(`You WIN ${prizes.this.props.counter.winCategory}`)\n      }\n    }\n    const toggleLeaderboard = async () => {\n      await this.props.initiateWinners()\n      this.props.toggle(!this.props.winners.toggle)\n    }\n    const container = {\n      padding: 10\n    }\n    return (\n      <div style={container}>\n        <h2 style={{ position: 'relative', padding: 10 }}>{'Nappipeli'}</h2>\n\n        <h2 style={{ position: 'relative', padding: 50 }}>{100 - (this.props.counter.count % 100)+ '...'}</h2>\n        <div style={{ position: 'relative', left: 30}}> clicks until next prize </div>\n        <Button bsSize=\"sm\" bsStyle=\"danger\"\n          onClick={() => buttonPress()}>nappu\n        </Button>\n        <Notification />\n\n        <div><Button style={{ margin: 5 }} onClick={() => toggleLeaderboard()}>Leaderboard</Button>\n\n        <div> {this.props.winners.toggle ?\n          <ul style={{border: '1px black', position:'relative'}}>\n            {this.props.winners.winners.map(w => <li>{w.name}</li>)}\n          </ul>\n          : <div></div>} </div>\n          </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n    notification: state.notification,\n    winners: state.winners\n  }\n}\n\nexport default connect(\n  mapStateToProps, { initiateWinners, toggle, notifyWin, initCounter, changeWinCategory, initNotification, increment, press, deleteMessage, hideMessage }\n)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport counterReducer from './reducers/counterReducer'\nimport winnersReducer from './reducers/winnersReducer'\n\nconst reducer = combineReducers({\n    counter: counterReducer,\n    notification: notificationReducer,\n    winners: winnersReducer\n  })\n\nconst store = createStore(reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))\n"],"sourceRoot":""}